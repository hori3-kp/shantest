[1,0,0,[["cc.TextAsset",["_name","text"],1]],[[0,0,1,3]],[[0,"lobby","syntax = \"proto3\";\r\npackage pb.client.lobby;\r\noption go_package = \"server-9kg/server/pb/client/lobby\";\r\n\r\n// -----------------------------------------------\r\n// 入廳狀態\r\nenum EnumEnterLobbyStatus {\r\n    E_ENTER_LOBBY_SUCCESSED     = 0 ;   // [狀態]入廳成功\r\n    E_ENTER_LOBBY_FAILED        = 1 ;   // [狀態]入廳失敗\r\n    E_ENTER_LOBBY_MAX           = 2 ;   // [狀態]上限判定用\r\n}\r\n\r\n// 入廳請求\r\nmessage EnterLobbyRequest {\r\n    string                  GameToken       = 1 ;   // 遊戲驗證碼\r\n\r\n    string                  GameID          = 11;   // 遊戲名稱\r\n    uint32                  LobbyNo         = 12;   // 遊戲廳種\r\n}\r\n// 入廳回應\r\nmessage EnterLobbyResponse {\r\n    EnumEnterLobbyStatus    Status          = 1 ;   // 入廳狀態(EnumEnterLobbyStatus)\r\n    // (以下欄位Status成功才會取得)\r\n    string                  GameID          = 11;   // 遊戲名稱\r\n    uint32                  LobbyNo         = 12;   // 遊戲廳種\r\n    uint32                  TableNo         = 13;   // 遊戲桌號(自動配桌)\r\n    uint32                  SeatNo          = 14;   // 遊戲座號(0:未入座, 1~MaxSeat:已入座)\r\n\r\n    uint64                  MinBet          = 21;   // 最小押注(0:無限制,有值:押注下限)\r\n    uint64                  MaxBet          = 22;   // 最大押注(0:無限制,有值:押注上限)\r\n    uint64                  PlayerMinChips  = 23;   // 玩家最低籌碼進入門檻\r\n    repeated uint32         BetChips        = 24;   // 押注籌碼列表\r\n}\r\n\r\n// -----------------------------------------------\r\n// 換廳狀態\r\nenum EnumChangeLobbyStatus {\r\n    E_CHANGE_LOBBY_SUCCESSED        = 0 ;   // [狀態]換廳成功\r\n    E_CHANGE_LOBBY_FAILED           = 1 ;   // [狀態]換廳失敗\r\n    E_CHANGE_LOBBY_MAX              = 2 ;   // [狀態]上限判定用\r\n}\r\n\r\n// 換廳請求\r\nmessage ChangeLobbyRequest {\r\n    string                  GameToken       = 1 ;   // 遊戲驗證碼\r\n\r\n    uint32                  LobbyNo         = 11;   // 遊戲廳種\r\n}\r\n// 換廳回應\r\nmessage ChangeLobbyResponse {\r\n    EnumChangeLobbyStatus   Status          = 1 ;   // 換廳狀態(EnumChangeLobbyStatus)\r\n    // (以下欄位Status成功才會取得)\r\n    string                  GameID          = 11;   // 遊戲名稱\r\n    uint32                  LobbyNo         = 12;   // 遊戲廳種\r\n    uint32                  TableNo         = 13;   // 遊戲桌號(自動配桌)\r\n    uint32                  SeatNo          = 14;   // 遊戲座號(0:未入座, 1~MaxSeat:已入座)\r\n\r\n    uint64                  MinBet          = 21;   // 最小押注(0:無限制,有值:押注下限)\r\n    uint64                  MaxBet          = 22;   // 最大押注(0:無限制,有值:押注上限)\r\n    uint64                  PlayerMinChips  = 23;   // 玩家最低籌碼進入門檻\r\n    repeated uint32         BetChips        = 24;   // 押注籌碼列表\r\n}\r\n\r\n// -----------------------------------------------\r\n// 換桌狀態\r\nenum EnumChangeTableStatus {\r\n    E_CHANGE_TABLE_SUCCESSED        = 0 ;   // [狀態]換桌成功\r\n    E_CHANGE_TABLE_FAILED           = 1 ;   // [狀態]換桌失敗\r\n    E_CHANGE_TABLE_MAX              = 2 ;   // [狀態]上限判定用\r\n}\r\n\r\n// 換桌請求\r\nmessage ChangeTableRequest {\r\n    string                  GameToken       = 1 ;   // 遊戲驗證碼\r\n}\r\n// 換桌回應\r\nmessage ChangeTableResponse {\r\n    EnumChangeTableStatus   Status          = 1 ;   // 換桌狀態(EnumChangeTableStatus)\r\n    // (以下欄位Status成功才會取得)\r\n    string                  GameID          = 11;   // 遊戲名稱\r\n    uint32                  LobbyNo         = 12;   // 遊戲廳種\r\n    uint32                  TableNo         = 13;   // 遊戲桌號(自動配桌)\r\n    uint32                  SeatNo          = 14;   // 遊戲座號(0:未入座, 1~MaxSeat:已入座)\r\n}\r\n\r\n// -----------------------------------------------\r\n// 入座狀態\r\nenum EnumEnterSeatStatus {\r\n    E_ENTER_SEAT_SUCCESSED          = 0 ;   // [狀態]入座成功\r\n    E_ENTER_SEAT_FAILED             = 1 ;   // [狀態]入座失敗\r\n    E_ENTER_SEAT_MAX                = 2 ;   // [狀態]上限判定用\r\n}\r\n\r\n// 入座請求\r\nmessage EnterSeatRequest {\r\n    string                  GameToken       = 1 ;   // 遊戲驗證碼\r\n\r\n    uint32                  SeatNo          = 11;   // 遊戲桌座號\r\n}\r\n// 入座回應\r\nmessage EnterSeatResponse {\r\n    EnumEnterSeatStatus     Status          = 1 ;   // 入座狀態(EnumEnterSeatStatus)\r\n    // (以下欄位Status成功才會取得)\r\n    string                  GameID          = 11;   // 遊戲名稱\r\n    uint32                  LobbyNo         = 12;   // 遊戲廳種\r\n    uint32                  TableNo         = 13;   // 遊戲桌號\r\n    uint32                  SeatNo          = 14;   // 遊戲座號(0:未入座, 1~MaxSeat:已入座)\r\n}\r\n\r\n// -----------------------------------------------\r\n// 離座狀態\r\nenum EnumLeaveSeatStatus {\r\n    E_LEAVE_SEAT_SUCCESSED          = 0 ;   // [狀態]離座成功\r\n    E_LEAVE_SEAT_FAILED             = 1 ;   // [狀態]離座失敗\r\n    E_LEAVE_SEAT_MAX                = 2 ;   // [狀態]上限判定用\r\n}\r\n\r\n// 離座請求\r\nmessage LeaveSeatRequest {\r\n    string                  GameToken       = 1 ;   // 遊戲驗證碼\r\n}\r\n// 離座回應\r\nmessage LeaveSeatResponse {\r\n    EnumLeaveSeatStatus     Status          = 1 ;   // 入座狀態(EnumLeaveSeatStatus)\r\n    // (以下欄位Status成功才會取得)\r\n    string                  GameID          = 11;   // 遊戲名稱\r\n    uint32                  LobbyNo         = 12;   // 遊戲廳種\r\n    uint32                  TableNo         = 13;   // 遊戲桌號\r\n    uint32                  SeatNo          = 14;   // 遊戲座號(0:未入座, 1~MaxSeat:已入座)\r\n}\r\n\r\n// -----------------------------------------------\r\n// 入座玩家發送表情請求\r\nmessage SeaterSendEmojiRequest {\r\n    string                  GameToken       = 1 ;   // 遊戲驗證碼\r\n\r\n    string                  EmojiMsg        = 11;   // 表情訊息\r\n}\r\n// 入座玩家發送表情回應\r\nmessage SeaterSendEmojiResponse {\r\n}\r\n\r\n// -----------------------------------------------\r\n// [用戶入桌,用戶入座,用戶離座,用戶斷線重連,他人入座,他人離座]時發送:[當前桌資訊通知]\r\nmessage CurrTableInfoNotify {\r\n    string                  GameID          = 1 ;   // 遊戲名稱\r\n    uint32                  LobbyNo         = 2 ;   // 遊戲廳種\r\n    uint32                  TableNo         = 3 ;   // 遊戲桌號\r\n\r\n    uint32                  SeatMax         = 11;   // 滿座數\r\n    map<uint32, SeatPlayer> SeatPlayerMap   = 12;   // 座位玩家表: map[座位號(1~SeatMax), 座位玩家]\r\n}\r\n// 座位玩家\r\nmessage SeatPlayer {\r\n    string                  PlayerID        = 1 ;   // 玩家帳號(UserID)\r\n    string                  PlayerName      = 2 ;   // 玩家名稱(UserName)\r\n}\r\n\r\n// [入座玩家發送表情請求]時發送:[入座玩家表情通知]\r\nmessage SeaterEmojiNotify {\r\n    uint32                  SeatNo          = 1 ;   // 遊戲座號\r\n    string                  EmojiMsg        = 2 ;   // 表情訊息\r\n}\r\n\r\n// 系統強踢桌用戶原因\r\nenum EnumSystemKickTableReason {\r\n    E_SYSTEM_KICK_TABLE_NONE                        = 0 ;   // [原因]無(未定義)\r\n    E_SYSTEM_KICK_TABLE_HOST_KICK_OUT               = 1 ;   // [原因]Host端強踢\r\n    E_SYSTEM_KICK_TABLE_USER_DISCONNECTED           = 2 ;   // [原因]用戶已斷線\r\n    E_SYSTEM_KICK_TABLE_USER_BALANCE_NOT_ENOUGH     = 3 ;   // [原因]用戶餘額不足(比如低於最小准入金額)\r\n    E_SYSTEM_KICK_TABLE_GAME_ABORT                  = 4 ;   // [原因]遊戲中止\r\n    E_SYSTEM_KICK_TABLE_MAX                         = 5 ;   // [原因]上限判定用\r\n}\r\n\r\n// [桌用戶被系統踢出廳桌或者座位時]時發送:[系統強踢桌用戶通知]\r\nmessage SystemKickTableUserNotify {\r\n    uint32                      KickType            = 1 ;   // 強踢類型[1:踢出廳桌,2:踢出座位(成為遊客)]\r\n    EnumSystemKickTableReason   Reason              = 2 ;   // 強踢原因\r\n\r\n    string                      GameID              = 11;   // 遊戲名稱\r\n    uint32                      LobbyNo             = 12;   // 遊戲廳種\r\n    uint32                      TableNo             = 13;   // 遊戲桌號\r\n    uint32                      SeatNo              = 14;   // 遊戲座號\r\n\r\n    string                      UserID              = 21;   // 用戶帳號\r\n}\r\n"]],0,0,[],[],[]]
